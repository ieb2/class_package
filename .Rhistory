df <- mtcars
#' @import ggpubr
#' @importFrom magrittr %>%
#' @import purrr
#' @import tidyr
#' @import broom
#' @param df dataset of interest.
#' @param model A linear model generated via "glm", "lm" or "aov".
#' @param x_var The variable to be plotted on the x-axis.
#' @param y_var The variable to be plotted on the y-axis.
#' @param x_lab String to be used as the x-axis label. If
outlier_graph <- function(df, model, x_var, y_var, x_lab = NULL, y_lab = NULL){
if ("lm" %in% class(model) == FALSE) {
stop("Not a valid regression model.
Make sure object is created either via `glm`, lm` or `aov`")
}
if(is.null(x_lab)){
x_lab <- deparse(substitute(x_var))
} else {x_lab <- x_lab}
if(is.null(y_lab)){
y_lab <- deparse(substitute(y_var))
} else {y_lab <- y_lab}
broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing")) %>%
ggplot2::ggplot(., aes(x = {{ x_var }}, y = {{ y_var }}, color = outlier)) +
ggplot2::geom_point() +
ggplot2::scale_color_manual(values = c("#999999", "#000000")) +
ggplot2::theme_bw() +
ggplot2::labs(x = x_lab, y = y_lab, color = "Outlier")
}
model <- lm(mpg ~ vs, mtcars)
df <- mtcars
outlier_graph(df = df, model = model, x_var = hp, y_var = mpg)
outlier_graph(df = df, model = model, x_var = hp, y_var = mpg, x_lab = "kaka")
model <- lm(bill_depth_mm ~ ., palmerpenguins::penguins)
df <- palmerpenguins::penguins
outlier_graph(df = df, model = model, x_var = year, y_var = bill_depth_mm, x_lab = "kaka")
model <- lm(bill_depth_mm ~ sex + year, palmerpenguins::penguins)
df <- palmerpenguins::penguins
outlier_graph(df = df, model = model, x_var = year, y_var = bill_depth_mm, x_lab = "kaka")
outlier_count(df = df, model = model)
model <- lm(bill_depth_mm ~ ., palmerpenguins::penguins)
df <- palmerpenguins::penguins
outlier_count(df = df, model = model)
outlier_graph(df = df, model = model, x_var = year, y_var = bill_depth_mm, x_lab = "kaka")
model <- lm(bill_depth_mm ~ ., palmerpenguins::penguins)
df <- palmerpenguins::penguins
outlier_count(df = df, model = model)
outlier_graph(df = df, model = model, x_var = year, y_var = bill_depth_mm, x_lab = "kaka")
model <- lm(bill_depth_mm ~ ., palmerpenguins::penguins)
df <- palmerpenguins::penguins
outlier_count(df = df, model = model)
broom::augment(model, newdata = df)
broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid))
broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing"))
broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing")) %>%
dplyr::select(outlier)
broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing")) %>%
dplyr::select(outlier) %>%
sum()
qq <- broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing")) %>%
dplyr::select(outlier)
qq == "Suspected"
sum(qq == "Suspected")
broom::augment(model) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing")) %>%
dplyr::select(outlier)
broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing")) %>%
dplyr::select(outlier)
broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid, na.rm = TRUE)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing")) %>%
ggplot2::ggplot(., aes(x = {{ x_var }}, y = {{ y_var }}, color = outlier)) +
ggplot2::geom_point() +
ggplot2::scale_color_manual(values = c("#999999", "#000000")) +
ggplot2::theme_bw() +
ggplot2::labs(x = x_lab, y = y_lab, color = "Outlier")
#' @import ggpubr
#' @importFrom magrittr %>%
#' @import purrr
#' @import tidyr
#' @import broom
#' @param df dataset of interest.
#' @param model A linear model generated via "glm", "lm" or "aov".
#' @param x_var The variable to be plotted on the x-axis.
#' @param y_var The variable to be plotted on the y-axis.
#' @param x_lab String to be used as the x-axis label. If
outlier_graph <- function(df, model, x_var, y_var, x_lab = NULL, y_lab = NULL){
if ("lm" %in% class(model) == FALSE) {
stop("Not a valid regression model.
Make sure object is created either via `glm`, lm` or `aov`")
}
if(is.null(x_lab)){
x_lab <- deparse(substitute(x_var))
} else {x_lab <- x_lab}
if(is.null(y_lab)){
y_lab <- deparse(substitute(y_var))
} else {y_lab <- y_lab}
broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid, na.rm = TRUE)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing")) %>%
ggplot2::ggplot(., aes(x = {{ x_var }}, y = {{ y_var }}, color = outlier)) +
ggplot2::geom_point() +
ggplot2::scale_color_manual(values = c("#999999", "#000000")) +
ggplot2::theme_bw() +
ggplot2::labs(x = x_lab, y = y_lab, color = "Outlier")
}
model <- lm(bill_depth_mm ~ ., palmerpenguins::penguins)
df <- palmerpenguins::penguins
outlier_count(df = df, model = model)
outlier_graph(df = df, model = model, x_var = year, y_var = bill_depth_mm, x_lab = "kaka")
broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid, na.rm = TRUE))
broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing")) %>%
dplyr::select(outlier)
broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid, na.rm = TRUE)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing")) %>%
dplyr::select(outlier)
broom::augment(model) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing")) %>%
dplyr::select(outlier)
#' @import ggpubr
#' @importFrom magrittr %>%
#' @import purrr
#' @import tidyr
#' @import broom
#' @param df dataset of interest.
#' @param model A linear model generated via "glm", "lm" or "aov".
#' @param x_var The variable to be plotted on the x-axis.
#' @param y_var The variable to be plotted on the y-axis.
#' @param x_lab String to be used as the x-axis label. If
outlier_graph <- function(df, model, x_var, y_var, x_lab = NULL, y_lab = NULL){
if ("lm" %in% class(model) == FALSE) {
stop("Not a valid regression model.
Make sure object is created either via `glm`, lm` or `aov`")
}
if(is.null(x_lab)){
x_lab <- deparse(substitute(x_var))
} else {x_lab <- x_lab}
if(is.null(y_lab)){
y_lab <- deparse(substitute(y_var))
} else {y_lab <- y_lab}
broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid, na.rm = TRUE)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing")) %>%
ggplot2::ggplot(., aes(x = {{ x_var }}, y = {{ y_var }}, color = outlier)) +
ggplot2::geom_point() +
ggplot2::scale_color_manual(values = c("#999999", "#000000", "#D2042D")) +
ggplot2::theme_bw() +
ggplot2::labs(x = x_lab, y = y_lab, color = "Outlier")
}
model <- lm(bill_depth_mm ~ ., palmerpenguins::penguins)
df <- palmerpenguins::penguins
outlier_count(df = df, model = model)
outlier_graph(df = df, model = model, x_var = year, y_var = bill_depth_mm, x_lab = "kaka")
#' @import ggpubr
#' @importFrom magrittr %>%
#' @import purrr
#' @import tidyr
#' @import broom
#' @param df dataset of interest.
#' @param model A linear model generated via "glm", "lm" or "aov".
#' @param x_var The variable to be plotted on the x-axis.
#' @param y_var The variable to be plotted on the y-axis.
#' @param x_lab String to be used as the x-axis label. If
outlier_graph <- function(df, model, x_var, y_var, x_lab = NULL, y_lab = NULL){
if ("lm" %in% class(model) == FALSE) {
stop("Not a valid regression model.
Make sure object is created either via `glm`, lm` or `aov`")
}
if(is.null(x_lab)){
x_lab <- deparse(substitute(x_var))
} else {x_lab <- x_lab}
if(is.null(y_lab)){
y_lab <- deparse(substitute(y_var))
} else {y_lab <- y_lab}
broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid, na.rm = TRUE)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing")) %>%
ggplot2::ggplot(., aes(x = {{ x_var }}, y = {{ y_var }}, color = outlier)) +
ggplot2::geom_point() +
ggplot2::scale_color_manual(values = c("#999999", "#000000")) +
ggplot2::theme_bw() +
ggplot2::labs(x = x_lab, y = y_lab, color = "Outlier")
}
model <- lm(bill_depth_mm ~ ., palmerpenguins::penguins)
df <- palmerpenguins::penguins
outlier_count(df = df, model = model)
outlier_graph(df = df, model = model, x_var = year, y_var = bill_depth_mm, x_lab = "kaka")
broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid, na.rm = TRUE))
broom::augment(model) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing")) %>%
ggplot2::ggplot(., aes(x = {{ x_var }}, y = {{ y_var }}, color = outlier)) +
ggplot2::geom_point() +
ggplot2::scale_color_manual(values = c("#999999", "#000000")) +
ggplot2::theme_bw() +
ggplot2::labs(x = x_lab, y = y_lab, color = "Outlier")
broom::augment(model)
broom::augment(model) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing"))
broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid, na.rm = TRUE)) %>%
dplyr::filter(!is.na(.std.resid))
broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid, na.rm = TRUE)) %>%
dplyr::filter(!is.na(.std.resid)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing")) %>%
ggplot2::ggplot(., aes(x = {{ x_var }}, y = {{ y_var }}, color = outlier)) +
ggplot2::geom_point() +
ggplot2::scale_color_manual(values = c("#999999", "#000000")) +
ggplot2::theme_bw() +
ggplot2::labs(x = x_lab, y = y_lab, color = "Outlier")
#' @import ggpubr
#' @importFrom magrittr %>%
#' @import purrr
#' @import tidyr
#' @import broom
#' @param df dataset of interest.
#' @param model A linear model generated via "glm", "lm" or "aov".
#' @param x_var The variable to be plotted on the x-axis.
#' @param y_var The variable to be plotted on the y-axis.
#' @param x_lab String to be used as the x-axis label. If
outlier_graph <- function(df, model, x_var, y_var, x_lab = NULL, y_lab = NULL){
if ("lm" %in% class(model) == FALSE) {
stop("Not a valid regression model.
Make sure object is created either via `glm`, lm` or `aov`")
}
if(is.null(x_lab)){
x_lab <- deparse(substitute(x_var))
} else {x_lab <- x_lab}
if(is.null(y_lab)){
y_lab <- deparse(substitute(y_var))
} else {y_lab <- y_lab}
broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid, na.rm = TRUE)) %>%
dplyr::filter(!is.na(.std.resid)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing")) %>%
ggplot2::ggplot(., aes(x = {{ x_var }}, y = {{ y_var }}, color = outlier)) +
ggplot2::geom_point() +
ggplot2::scale_color_manual(values = c("#999999", "#000000")) +
ggplot2::theme_bw() +
ggplot2::labs(x = x_lab, y = y_lab, color = "Outlier")
}
model <- lm(bill_depth_mm ~ ., palmerpenguins::penguins)
df <- palmerpenguins::penguins
outlier_count(df = df, model = model)
outlier_graph(df = df, model = model, x_var = year, y_var = bill_depth_mm, x_lab = "kaka")
model <- lm(bill_depth_mm ~ ., palmerpenguins::penguins)
df <- palmerpenguins::penguins
outlier_count(df = df, model = model)
outlier_graph(df = df, model = model, x_var = flipper_length_mm, y_var = bill_depth_mm, x_lab = "kaka")
outlier_count(df = df, model = model)
x_var = flipper_length_mm
broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid, na.rm = TRUE)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing"))
aa <- broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid, na.rm = TRUE)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing"))
aa$outlier == "Suspected"
sum(aa$outlier == "Suspected")
model <- lm(bill_depth_mm ~ flipper_length_mm, palmerpenguins::penguins)
model
df <- palmerpenguins::penguins
broom::augment(model, newdata = df)
broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid, na.rm = TRUE))
broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid, na.rm = TRUE)) %>%
dplyr::filter(!is.na(.std.resid))
#' @import ggpubr
#' @importFrom magrittr %>%
#' @import purrr
#' @import tidyr
#' @import broom
#' @param df dataset of interest.
#' @param model A linear model generated via "glm", "lm" or "aov".
#' @param x_var The variable to be plotted on the x-axis.
#' @param y_var The variable to be plotted on the y-axis.
#' @param x_lab String to be used as the x-axis label. If
outlier_graph <- function(df, model, x_var, y_var, x_lab = NULL, y_lab = NULL){
if ("lm" %in% class(model) == FALSE) {
stop("Not a valid regression model.
Make sure object is created either via `glm`, lm` or `aov`")
}
if(is.null(x_lab)){
x_lab <- deparse(substitute(x_var))
} else {x_lab <- x_lab}
if(is.null(y_lab)){
y_lab <- deparse(substitute(y_var))
} else {y_lab <- y_lab}
broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid, na.rm = TRUE)) %>%
dplyr::filter(!is.na(.std.resid)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing")) %>%
ggplot2::ggplot(., aes(x = {{ x_var }}, y = {{ y_var }}, color = outlier)) +
ggplot2::geom_point() +
ggplot2::scale_color_manual(values = c("#999999", "#000000")) +
ggplot2::theme_bw() +
ggplot2::labs(x = x_lab, y = y_lab, color = "Outlier")
}
outlier_graph <- function(df, model, x_var, y_var, x_lab = NULL, y_lab = NULL){
if ("lm" %in% class(model) == FALSE) {
stop("Not a valid regression model.
Make sure object is created either via `glm`, lm` or `aov`")
}
if(is.null(x_lab)){
x_lab <- deparse(substitute(x_var))
} else {x_lab <- x_lab}
if(is.null(y_lab)){
y_lab <- deparse(substitute(y_var))
} else {y_lab <- y_lab}
broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid, na.rm = TRUE)) %>%
dplyr::filter(!is.na(.std.resid)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing")) %>%
ggplot2::ggplot(., aes(x = {{ x_var }}, y = {{ y_var }}, color = outlier)) +
ggplot2::geom_point() +
ggplot2::scale_color_manual(values = c("#999999", "#000000")) +
ggplot2::theme_bw() +
ggplot2::labs(x = x_lab, y = y_lab, color = "Outlier")
}
model <- lm(bill_depth_mm ~ flipper_length_mm, palmerpenguins::penguins)
df <- palmerpenguins::penguins
outlier_count(df = df, model = model)
outlier_graph(df = df, model = model, x_var = flipper_length_mm, y_var = bill_depth_mm, x_lab = "kaka")
outlier_graph <- function(df, model, x_var, y_var, x_lab = NULL, y_lab = NULL){
if ("lm" %in% class(model) == FALSE) {
stop("Not a valid regression model.
Make sure object is created either via `glm`, lm` or `aov`")
}
if(is.null(x_lab)){
x_lab <- deparse(substitute(x_var))
} else {x_lab <- x_lab}
if(is.null(y_lab)){
y_lab <- deparse(substitute(y_var))
} else {y_lab <- y_lab}
broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid, na.rm = TRUE)) %>%
dplyr::filter(!is.na(.std.resid)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing")) %>%
ggplot2::ggplot(., aes(x = {{ x_var }}, y = {{ y_var }}, color = outlier)) +
ggplot2::geom_point() +
ggplot2::scale_color_manual(values = c("#999999", "#000000")) +
ggplot2::theme_bw() +
ggplot2::labs(x = x_lab, y = y_lab, color = "Outlier")
}
data <- broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid, na.rm = TRUE)) %>%
dplyr::filter(!is.na(.std.resid)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing"))
data
data$outlier
data$outlier == "Suspected"
sum(data$outlier == "Suspected")
data %>%
ggplot2::ggplot(., aes(x = {{ x_var }}, y = {{ y_var }}, color = outlier)) +
ggplot2::geom_point() +
ggplot2::scale_color_manual(values = c("#999999", "#000000")) +
ggplot2::theme_bw() +
ggplot2::labs(x = x_lab, y = y_lab, color = "Outlier",
title = cat(paste0("There are")))
outlier_graph <- function(df, model, x_var, y_var, x_lab = NULL, y_lab = NULL){
if ("lm" %in% class(model) == FALSE) {
stop("Not a valid regression model.
Make sure object is created either via `glm`, lm` or `aov`")
}
if(is.null(x_lab)){
x_lab <- deparse(substitute(x_var))
} else {x_lab <- x_lab}
if(is.null(y_lab)){
y_lab <- deparse(substitute(y_var))
} else {y_lab <- y_lab}
data <- broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid, na.rm = TRUE)) %>%
dplyr::filter(!is.na(.std.resid)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing"))
n_suspected <- sum(data$outlier == "Suspected")
data %>%
ggplot2::ggplot(., aes(x = {{ x_var }}, y = {{ y_var }}, color = outlier)) +
ggplot2::geom_point() +
ggplot2::scale_color_manual(values = c("#999999", "#000000")) +
ggplot2::theme_bw() +
ggplot2::labs(x = x_lab, y = y_lab, color = "Outlier",
title = cat(paste0("There are")))
}
outlier_graph(df, model, bill_length_mm, bill_depth_mm)
outlier_graph <- function(df, model, x_var, y_var, x_lab = NULL, y_lab = NULL){
if ("lm" %in% class(model) == FALSE) {
stop("Not a valid regression model.
Make sure object is created either via `glm`, lm` or `aov`")
}
if(is.null(x_lab)){
x_lab <- deparse(substitute(x_var))
} else {x_lab <- x_lab}
if(is.null(y_lab)){
y_lab <- deparse(substitute(y_var))
} else {y_lab <- y_lab}
data <- broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid, na.rm = TRUE)) %>%
dplyr::filter(!is.na(.std.resid)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing"))
n_suspected <- sum(data$outlier == "Suspected")
data %>%
ggplot2::ggplot(., aes(x = {{ x_var }}, y = {{ y_var }}, color = outlier)) +
ggplot2::geom_point() +
ggplot2::scale_color_manual(values = c("#999999", "#000000")) +
ggplot2::theme_bw() +
ggplot2::labs(x = x_lab, y = y_lab, color = "Outlier",
title = cat(paste0("There are")))
}
outlier_graph(df, model, bill_length_mm, bill_depth_mm)
outlier_graph <- function(df, model, x_var, y_var, x_lab = NULL, y_lab = NULL){
if ("lm" %in% class(model) == FALSE) {
stop("Not a valid regression model.
Make sure object is created either via `glm`, lm` or `aov`")
}
if(is.null(x_lab)){
x_lab <- deparse(substitute(x_var))
} else {x_lab <- x_lab}
if(is.null(y_lab)){
y_lab <- deparse(substitute(y_var))
} else {y_lab <- y_lab}
data <- broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid, na.rm = TRUE)) %>%
dplyr::filter(!is.na(.std.resid)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing"))
n_suspected <- sum(data$outlier == "Suspected")
data %>%
ggplot2::ggplot(., aes(x = {{ x_var }}, y = {{ y_var }}, color = outlier)) +
ggplot2::geom_point() +
ggplot2::scale_color_manual(values = c("#999999", "#000000")) +
ggplot2::theme_bw() +
ggplot2::labs(x = x_lab, y = y_lab, color = "Outlier",
title = cat(paste0("There are")))
}
outlier_graph(df, model, bill_length_mm, bill_depth_mm)
outlier_graph <- function(df, model, x_var, y_var, x_lab = NULL, y_lab = NULL){
if ("lm" %in% class(model) == FALSE) {
stop("Not a valid regression model.
Make sure object is created either via `glm`, lm` or `aov`")
}
if(is.null(x_lab)){
x_lab <- deparse(substitute(x_var))
} else {x_lab <- x_lab}
if(is.null(y_lab)){
y_lab <- deparse(substitute(y_var))
} else {y_lab <- y_lab}
data <- broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid, na.rm = TRUE)) %>%
dplyr::filter(!is.na(.std.resid)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing"))
n_suspected <- sum(data$outlier == "Suspected")
data %>%
ggplot2::ggplot(., aes(x = {{ x_var }}, y = {{ y_var }}, color = outlier)) +
ggplot2::geom_point() +
ggplot2::scale_color_manual(values = c("#999999", "#000000")) +
ggplot2::theme_bw() +
ggplot2::labs(x = x_lab, y = y_lab, color = "Outlier",
title = paste0("There are ", n_suspected, " suspected outliers."))
}
outlier_graph(df, model, bill_length_mm, bill_depth_mm)
model <- lm(bill_length_mm ~ ., palmerpenguins::penguins)
outlier_graph(df, model, bill_length_mm, bill_depth_mm)
outlier_graph(df, model, bill_length_mm, bill_depth_mm, "kaka")
outlier_graph(df, model, bill_length_mm, bill_depth_mm)
outlier_graph <- function(df, model, x_var, y_var, x_lab = NULL, y_lab = NULL){
if ("lm" %in% class(model) == FALSE) {
stop("Not a valid regression model.
Make sure object is created either via `glm`, lm` or `aov`")
}
if(is.null(x_lab)){
x_lab <- deparse(substitute(x_var))
} else {x_lab <- x_lab}
if(is.null(y_lab)){
y_lab <- deparse(substitute(y_var))
} else {y_lab <- y_lab}
data <- broom::augment(model, newdata = df) %>%
dplyr::mutate(.std.resid = .resid / sd(.resid, na.rm = TRUE)) %>%
dplyr::filter(!is.na(.std.resid)) %>%
dplyr::mutate(outlier = dplyr::if_else(abs(.std.resid) > 2.5, true = "Suspected", false = "Not Suspected", missing = "Missing"))
n_suspected <- sum(data$outlier == "Suspected")
plot <- data %>%
ggplot2::ggplot(., aes(x = {{ x_var }}, y = {{ y_var }}, color = outlier)) +
ggplot2::geom_point() +
ggplot2::scale_color_manual(values = c("#999999", "#000000")) +
ggplot2::theme_bw() +
ggplot2::labs(x = x_lab, y = y_lab, color = "Outlier",
title = paste0("There are ", n_suspected, " suspected outliers."))
return(plot)
}
model <- lm(bill_length_mm ~ ., palmerpenguins::penguins)
outlier_graph(df, model, bill_length_mm, bill_depth_mm)
model <- lm(bill_length_mm ~ sex, palmerpenguins::penguins)
outlier_graph(df, model, bill_length_mm, bill_depth_mm)
outlier_count(palmerpenguins::penguins, model)
