} else if (length(split_dfs) > 2) {
stop(cat("There are more than two levels to the grouping variable, they are:", levels_vector, "\n"))
}
first_group_df <-
ifelse(split_dfs[[1]][[grouping_variable]][[1]] == first_group,
split_dfs[1], split_dfs[2]
)
second_group_df <-
ifelse(split_dfs[[2]][[grouping_variable]][[1]] == second_group,
split_dfs[2], split_dfs[1]
)
data.frame(diff = first_group_df[[1]][[variable]] - second_group_df[[1]][[variable]]) %>%
ggplot2::ggplot(
.,
aes(sample = diff)
) +
ggplot2::stat_qq_line(
linetype = "dashed",
color = "black", linewidth = 1
) +
ggplot2::stat_qq(color = "#6A6C6E") +
ggplot2::theme_bw() +
ggplot2::labs(x = "Theoretical", y = "Sample", title = paste0("QQ Plot for ",
sep = "",
first_group, "-", second_group
))
}
dependent_qq_plot(mtcars, "hp", "vs", "0", "1")
data.frame(a = seq(1,100, by = 1),
b = seq(100, 200, by = 1))
data.frame(a = seq(1,100, by = 1),
b = seq(99, 200, by = 1))
data.frame(a = seq(1,100, by = 1),
b = seq(101, 200, by = 1))
<- data.frame(a = seq(1,100, by = 1),
test<- data.frame(a = seq(1,100, by = 1),
b = seq(101, 200, by = 1),
c = rnorm(100))
test<- data.frame(a = seq(1,100, by = 1),
b = seq(101, 200, by = 1),
c = rnorm(100),
d = sample(c(0,1), 100, replace = TRUE))
dependent_qq_plot(test, "c", "d", "0", "1")
test<- data.frame(a = seq(1,100, by = 1),
b = seq(101, 200, by = 1),
c = rnorm(100),
d = sample(c(0,1), 100, replace = TRUE))
dependent_qq_plot(test, "c", "d", "0", "1")
test<- data.frame(a = seq(1,100, by = 1),
b = seq(101, 200, by = 1),
c = rnorm(100),
d = sample(c(0,1), 100, replace = TRUE))
dependent_qq_plot(test, "c", "d", "0", "1")
test<- data.frame(a = seq(1,100, by = 1),
b = seq(101, 200, by = 1),
c = rnorm(100),
d = rep(c(0,1), each = 50))
dependent_qq_plot(test, "c", "d", "0", "1")
dependent_qq_plot(test, "c", "d", "1", "0")
test <- data.frame(a = seq(1,100, by = 1),
b = seq(101, 200, by = 1),
c = rnorm(100),
d = rep(c(0,1), each = 50))
dependent_qq_plot(test, "c", "d", "1", "0")
test <- data.frame(a = seq(1,100, by = 1),
b = seq(101, 200, by = 1),
c = rnorm(100),
d = rep(c(0,1), each = 50))
dependent_qq_plot(test, "c", "d", "1", "0")
test <- data.frame(a = seq(1,100, by = 1),
b = seq(101, 200, by = 1),
c = rnorm(100),
d = rep(c(0,1), each = 50))
dependent_qq_plot(test, "c", "d", "1", "0")
independent_qq_plot <- function(data, variable, grouping_variable) {
split_dfs <- data %>%
dplyr::group_split(get(grouping_variable))
levels_vector <-
sapply(split_dfs, function(x) (x[[grouping_variable]])[[1]]) %>%
as.character()
if (length(split_dfs) < 2) {
stop(cat("There are less than two levels to the grouping variable, it is", levels_vector, "\n"))
} else if (length(split_dfs) > 2) {
stop(cat("There are more than two levels to the grouping variable, they are:", levels_vector, "\n"))
}
qq_1 <-
ggplot2::ggplot(
split_dfs[[1]],
aes(sample = get(variable))
) +
ggplot2::stat_qq_line(
linetype = "dashed",
color = "black", linewidth = 1
) +
ggplot2::stat_qq(color = "#6A6C6E") +
ggplot2::theme_bw() +
ggplot2::labs(x = "Theoretical", y = "Sample", title = paste0("QQ Plot for ",
sep = "",
quote(levels_vector[[1]])
))
qq_2 <-
ggplot2::ggplot(
split_dfs[[2]],
aes(sample = get(variable))
) +
ggplot2::stat_qq_line(
linetype = "dashed",
color = "black", linewidth = 1
) +
ggplot2::stat_qq(color = "#6A6C6E") +
ggplot2::theme_bw() +
ggplot2::labs(x = "Theoretical", y = "Sample", title = paste0("QQ Plot for ",
sep = "",
quote(levels_vector[[2]])
))
ggpubr::ggarrange(qq_1, qq_2)
}
penguins %>%
dplyr::filter(sex == "male" | sex == "female") %>%
independent_qq_plot(., variable = "bill_length_mm", "sex")
library(palmerpenguins)
penguins %>%
dplyr::filter(sex == "male" | sex == "female") %>%
independent_qq_plot(., variable = "bill_length_mm", "sex")
library(tidyverse)
library(palmerpenguins)
penguins %>%
dplyr::filter(sex == "male" | sex == "female") %>%
independent_qq_plot(., variable = "bill_length_mm", "sex")
independent_qq_plot <- function(data, variable, grouping_variable) {
split_dfs <- data %>%
dplyr::group_split(get(grouping_variable))
levels_vector <-
sapply(split_dfs, function(x) (x[[grouping_variable]])[[1]]) %>%
as.character()
if (length(split_dfs) < 2) {
stop(cat("There are less than two levels to the grouping variable, it is", levels_vector, "\n"))
} else if (length(split_dfs) > 2) {
stop(cat("There are more than two levels to the grouping variable, they are:", levels_vector, "\n"))
}
qq_1 <-
ggplot2::ggplot(
split_dfs[[1]],
aes(sample = get(variable))
) +
ggplot2::stat_qq_line(
linetype = "dashed",
color = "black", linewidth = 1
) +
ggplot2::stat_qq(color = "#6A6C6E") +
ggplot2::theme_bw() +
ggplot2::labs(x = "Theoretical", y = "Sample", title = paste0("QQ Plot for ",
sep = "",
paste0(levels_vector[[1]])
))
qq_2 <-
ggplot2::ggplot(
split_dfs[[2]],
aes(sample = get(variable))
) +
ggplot2::stat_qq_line(
linetype = "dashed",
color = "black", linewidth = 1
) +
ggplot2::stat_qq(color = "#6A6C6E") +
ggplot2::theme_bw() +
ggplot2::labs(x = "Theoretical", y = "Sample", title = paste0("QQ Plot for ",
sep = "",
quote(levels_vector[[2]])
))
ggpubr::ggarrange(qq_1, qq_2)
}
penguins %>%
dplyr::filter(sex == "male" | sex == "female") %>%
independent_qq_plot(., variable = "bill_length_mm", "sex")
independent_qq_plot <- function(data, variable, grouping_variable) {
split_dfs <- data %>%
dplyr::group_split(get(grouping_variable))
levels_vector <-
sapply(split_dfs, function(x) (x[[grouping_variable]])[[1]]) %>%
as.character()
if (length(split_dfs) < 2) {
stop(cat("There are less than two levels to the grouping variable, it is", levels_vector, "\n"))
} else if (length(split_dfs) > 2) {
stop(cat("There are more than two levels to the grouping variable, they are:", levels_vector, "\n"))
}
qq_1 <-
ggplot2::ggplot(
split_dfs[[1]],
aes(sample = get(variable))
) +
ggplot2::stat_qq_line(
linetype = "dashed",
color = "black", linewidth = 1
) +
ggplot2::stat_qq(color = "#6A6C6E") +
ggplot2::theme_bw() +
ggplot2::labs(x = "Theoretical", y = "Sample", title = paste0("QQ Plot for ",
sep = "",
deparse(levels_vector[[1]]))
))
penguins %>%
dplyr::filter(sex == "male" | sex == "female") %>%
independent_qq_plot(., variable = "bill_length_mm", "sex")
one_qq_plot <- function(data, variable) {
ggplot2::ggplot(data, aes(sample = get(variable))) +
ggplot2::stat_qq_line(
linetype = "dashed",
color = "black", linewidth = 1
) +
ggplot2::stat_qq(color = "#6A6C6E") +
ggplot2::theme_bw() +
ggplot2::labs(x = "Theoretical", y = "Sample", title = paste0("QQ Plot for ",
sep = "",
variable
))
}
library(tidyverse)
library(palmerpenguins)
one_qq_plot(penguins, "bill_length_mm")
plit_dfs[[2]]
split_dfs[[2]]
independent_qq_plot <- function(data, variable, grouping_variable) {
split_dfs <- data %>%
dplyr::group_split(get(grouping_variable))
levels_vector <-
sapply(split_dfs, function(x) (x[[grouping_variable]])[[1]]) %>%
as.character()
if (length(split_dfs) < 2) {
stop(cat("There are less than two levels to the grouping variable, it is", levels_vector, "\n"))
} else if (length(split_dfs) > 2) {
stop(cat("There are more than two levels to the grouping variable, they are:", levels_vector, "\n"))
}
qq_1 <-
ggplot2::ggplot(
split_dfs[[1]],
aes(sample = get(variable))
) +
ggplot2::stat_qq_line(
linetype = "dashed",
color = "black", linewidth = 1
) +
ggplot2::stat_qq(color = "#6A6C6E") +
ggplot2::theme_bw() +
ggplot2::labs(x = "Theoretical", y = "Sample", title = paste0("QQ Plot for ",
sep = "",
levels_vector[[1]]
))
qq_2 <-
ggplot2::ggplot(
split_dfs[[2]],
aes(sample = get(variable))
) +
ggplot2::stat_qq_line(
linetype = "dashed",
color = "black", linewidth = 1
) +
ggplot2::stat_qq(color = "#6A6C6E") +
ggplot2::theme_bw() +
ggplot2::labs(x = "Theoretical", y = "Sample", title = paste0("QQ Plot for ",
grouping_variable, "=", levels_vector[[2]]
))
ggpubr::ggarrange(qq_1, qq_2)
}
independent_qq_plot(penguins, "bill_length_mm", "sex")
drop_na(penguins) %>%
independent_qq_plot(., "bill_length_mm", "sex")
independent_qq_plot <- function(data, variable, grouping_variable) {
split_dfs <- data %>%
dplyr::group_split(get(grouping_variable))
levels_vector <-
sapply(split_dfs, function(x) (x[[grouping_variable]])[[1]]) %>%
as.character()
if (length(split_dfs) < 2) {
stop(cat("There are less than two levels to the grouping variable, it is", levels_vector, "\n"))
} else if (length(split_dfs) > 2) {
stop(cat("There are more than two levels to the grouping variable, they are:", levels_vector, "\n"))
}
qq_1 <-
ggplot2::ggplot(
split_dfs[[1]],
aes(sample = get(variable))
) +
ggplot2::stat_qq_line(
linetype = "dashed",
color = "black", linewidth = 1
) +
ggplot2::stat_qq(color = "#6A6C6E") +
ggplot2::theme_bw() +
ggplot2::labs(x = "Theoretical", y = "Sample", title = paste0("QQ Plot for ",
sep = "",
grouping_variable, "=", levels_vector[[1]]
))
qq_2 <-
ggplot2::ggplot(
split_dfs[[2]],
aes(sample = get(variable))
) +
ggplot2::stat_qq_line(
linetype = "dashed",
color = "black", linewidth = 1
) +
ggplot2::stat_qq(color = "#6A6C6E") +
ggplot2::theme_bw() +
ggplot2::labs(x = "Theoretical", y = "Sample", title = paste0("QQ Plot for ",
grouping_variable, "=", levels_vector[[2]]
))
ggpubr::ggarrange(qq_1, qq_2)
}
drop_na(penguins) %>%
independent_qq_plot(., "bill_length_mm", "sex")
dependent_qq_plot <- function(data, variable, grouping_variable, first_group, second_group) {
split_dfs <- data %>%
dplyr::group_split(get(grouping_variable))
levels_vector <-
sapply(split_dfs, function(x) (x[[grouping_variable]])[[1]]) %>%
as.character()
if (length(split_dfs) < 2) {
stop(cat("There are less than two levels to the grouping variable, it is", levels_vector, "\n"))
} else if (length(split_dfs) > 2) {
stop(cat("There are more than two levels to the grouping variable, they are:", levels_vector, "\n"))
}
first_group_df <-
ifelse(split_dfs[[1]][[grouping_variable]][[1]] == first_group,
split_dfs[1], split_dfs[2]
)
second_group_df <-
ifelse(split_dfs[[2]][[grouping_variable]][[1]] == second_group,
split_dfs[2], split_dfs[1]
)
data.frame(diff = first_group_df[[1]][[variable]] - second_group_df[[1]][[variable]]) %>%
ggplot2::ggplot(
.,
aes(sample = diff)
) +
ggplot2::stat_qq_line(
linetype = "dashed",
color = "black", linewidth = 1
) +
ggplot2::stat_qq(color = "#6A6C6E") +
ggplot2::theme_bw() +
ggplot2::labs(x = "Theoretical", y = "Sample", title = paste0("QQ Plot for ",
variable, "in order of "
first_group, "-", second_group, "for",
dependent_qq_plot <- function(data, variable, grouping_variable, first_group, second_group) {
split_dfs <- data %>%
dplyr::group_split(get(grouping_variable))
levels_vector <-
sapply(split_dfs, function(x) (x[[grouping_variable]])[[1]]) %>%
as.character()
if (length(split_dfs) < 2) {
stop(cat("There are less than two levels to the grouping variable, it is", levels_vector, "\n"))
} else if (length(split_dfs) > 2) {
stop(cat("There are more than two levels to the grouping variable, they are:", levels_vector, "\n"))
}
first_group_df <-
ifelse(split_dfs[[1]][[grouping_variable]][[1]] == first_group,
split_dfs[1], split_dfs[2]
)
second_group_df <-
ifelse(split_dfs[[2]][[grouping_variable]][[1]] == second_group,
split_dfs[2], split_dfs[1]
)
data.frame(diff = first_group_df[[1]][[variable]] - second_group_df[[1]][[variable]]) %>%
ggplot2::ggplot(
.,
aes(sample = diff)
) +
ggplot2::stat_qq_line(
linetype = "dashed",
color = "black", linewidth = 1
) +
ggplot2::stat_qq(color = "#6A6C6E") +
ggplot2::theme_bw() +
ggplot2::labs(x = "Theoretical", y = "Sample", title = paste0("QQ Plot for ",
variable, "in order of: ",
first_group, "-", second_group, "for",
))
}
dependent_qq_plot(penguins, "bill_length_mm", "sex", "female", "male")
dependent_qq_plot(drop_na(penguins), "bill_length_mm", "sex", "female", "male")
dependent_qq_plot(drop_na(penguins), "bill_length_mm", "sex", "female", "male")
dependent_qq_plot <- function(data, variable, grouping_variable, first_group, second_group) {
split_dfs <- data %>%
dplyr::group_split(get(grouping_variable))
levels_vector <-
sapply(split_dfs, function(x) (x[[grouping_variable]])[[1]]) %>%
as.character()
if (length(split_dfs) < 2) {
stop(cat("There are less than two levels to the grouping variable, it is", levels_vector, "\n"))
} else if (length(split_dfs) > 2) {
stop(cat("There are more than two levels to the grouping variable, they are:", levels_vector, "\n"))
}
first_group_df <-
ifelse(split_dfs[[1]][[grouping_variable]][[1]] == first_group,
split_dfs[1], split_dfs[2]
)
second_group_df <-
ifelse(split_dfs[[2]][[grouping_variable]][[1]] == second_group,
split_dfs[2], split_dfs[1]
)
data.frame(diff = first_group_df[[1]][[variable]] - second_group_df[[1]][[variable]]) %>%
ggplot2::ggplot(
.,
aes(sample = diff)
) +
ggplot2::stat_qq_line(
linetype = "dashed",
color = "black", linewidth = 1
) +
ggplot2::stat_qq(color = "#6A6C6E") +
ggplot2::theme_bw() +
ggplot2::labs(x = "Theoretical", y = "Sample", title = paste0("QQ Plot for ",
variable, "in order of: ",
first_group, "-", second_group,
))
}
dependent_qq_plot(drop_na(penguins), "bill_length_mm", "sex", "female", "male")
dependent_qq_plot <- function(data, variable, grouping_variable, first_group, second_group) {
split_dfs <- data %>%
dplyr::group_split(get(grouping_variable))
levels_vector <-
sapply(split_dfs, function(x) (x[[grouping_variable]])[[1]]) %>%
as.character()
if (length(split_dfs) < 2) {
stop(cat("There are less than two levels to the grouping variable, it is", levels_vector, "\n"))
} else if (length(split_dfs) > 2) {
stop(cat("There are more than two levels to the grouping variable, they are:", levels_vector, "\n"))
}
first_group_df <-
ifelse(split_dfs[[1]][[grouping_variable]][[1]] == first_group,
split_dfs[1], split_dfs[2]
)
second_group_df <-
ifelse(split_dfs[[2]][[grouping_variable]][[1]] == second_group,
split_dfs[2], split_dfs[1]
)
data.frame(diff = first_group_df[[1]][[variable]] - second_group_df[[1]][[variable]]) %>%
ggplot2::ggplot(
.,
aes(sample = diff)
) +
ggplot2::stat_qq_line(
linetype = "dashed",
color = "black", linewidth = 1
) +
ggplot2::stat_qq(color = "#6A6C6E") +
ggplot2::theme_bw() +
ggplot2::labs(x = "Theoretical", y = "Sample", title = paste0("QQ Plot for ",
variable, "in order of: ",
first_group, "-", second_group
))
}
dependent_qq_plot(drop_na(penguins), "bill_length_mm", "sex", "female", "male")
dependent_qq_plot <- function(data, variable, grouping_variable, first_group, second_group) {
split_dfs <- data %>%
dplyr::group_split(get(grouping_variable))
levels_vector <-
sapply(split_dfs, function(x) (x[[grouping_variable]])[[1]]) %>%
as.character()
if (length(split_dfs) < 2) {
stop(cat("There are less than two levels to the grouping variable, it is", levels_vector, "\n"))
} else if (length(split_dfs) > 2) {
stop(cat("There are more than two levels to the grouping variable, they are:", levels_vector, "\n"))
}
first_group_df <-
ifelse(split_dfs[[1]][[grouping_variable]][[1]] == first_group,
split_dfs[1], split_dfs[2]
)
second_group_df <-
ifelse(split_dfs[[2]][[grouping_variable]][[1]] == second_group,
split_dfs[2], split_dfs[1]
)
data.frame(diff = first_group_df[[1]][[variable]] - second_group_df[[1]][[variable]]) %>%
ggplot2::ggplot(
.,
aes(sample = diff)
) +
ggplot2::stat_qq_line(
linetype = "dashed",
color = "black", linewidth = 1
) +
ggplot2::stat_qq(color = "#6A6C6E") +
ggplot2::theme_bw() +
ggplot2::labs(x = "Theoretical", y = "Sample", title = paste0("QQ Plot for ",
variable, " in order of: ",
first_group, "-", second_group
))
}
dependent_qq_plot(drop_na(penguins), "bill_length_mm", "sex", "female", "male")
styler:::style_active_file()
Depends: matrixStats
roxygen2::roxygenise()
Depends: matrixStats
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
warnings()
roxygen2::roxygenise()
warnings()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
superior_almost_sas(lm(hp ~ vs + carb, data = mtcars), binwidth = 4)
superior_almost_sas(lm(hp ~ vs + carb, data = mtcars), binwidth = 4))
superior_almost_sas(lm(hp ~ vs + carb, data = mtcars), binwidth = 4))
superior_almost_sas(lm(hp ~ vs + carb, data = mtcars), binwidth = 4)
superior_almost_sas(lm(hp ~ vs + carb, data = mtcars), binwidth = 4)
superior_almost_sas(lm(hp ~ vs + carb, data = mtcars))
superior_almost_sas(lm(hp ~ vs + mpg, data = mtcars))
superior_almost_sas(lm(hp ~ mpg, data = mtcars))
